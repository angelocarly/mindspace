#version 450

layout ( local_size_x = 16, local_size_y = 16, local_size_z = 1 ) in;

layout( binding = 0, rgba8 ) uniform image2D image;
layout(std430, binding = 1 ) buffer Locations {
    int len;
    vec4 pos[];
} positions;

layout( push_constant ) uniform PushConstants
{
    mat4 transform;
} constants;

vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )
{
    return a + b*cos( 6.28318*(c*t+d) );
}

void circle( vec2 pos, float r ) {
    ivec2 p = ivec2(pos);
    for( float a = 0.0f; a < 2 * 3.14159f; a += 2 * 3.14159f / 190.0f ) {
        imageStore(image, p + ivec2(cos(a) * r, sin(a) * r), vec4(1));
    }
}

void main()
{
    ivec2 p = ivec2( gl_GlobalInvocationID.xy );
    ivec2 screenSize = imageSize( image );
    if( p.x > screenSize.x || p.y > screenSize.y )
    {
        return;
    }

    if( p.x >= positions.len || p.y > 1 ) return;
    int id = p.x;

    vec4 pos = constants.transform * positions.pos[id];
    pos /= pos.w;

    circle( pos.xy, 10.01f);
}